#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

. ./bin/buildpack_helpers/tailscale_latest_release

# configure environment
set -e            # fail fast
set -o pipefail   # don't ignore exit codes when piping output
shopt -s nullglob # allow file pattern to expand to null
unset GIT_DIR     # clean up leaking environment
# set -x          # enable debugging

function log_buildpack_step() {
  echo "-----> $*"
}

function log_buildpack_progress() {
  while IFS= read -r line; do
    echo -e "$line" | sed 's/^/       /'
  done
}

# setup variables
BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3
BUILDPACK_DIR="$(dirname "$(dirname "$0")")"

START_TAILSCALE_ON_BOOT=${START_TAILSCALE_ON_BOOT:-true}
STOP_BUILD_ON_ERROR=${STOP_BUILD_ON_ERROR:-true}
latest_tailscale_version=$(latest_tailscale_version)
TAILSCALE_VERSION=${TAILSCALE_VERSION:-$latest_tailscale_version}

TAILSCALE_BUILD_ARCH=${TAILSCALE_BUILD_ARCH:-$(detect_tailscale_build_arch)}
TAILSCALE_SOURCE_URL="https://pkgs.tailscale.com/stable/tailscale_${TAILSCALE_VERSION}_${TAILSCALE_BUILD_ARCH}.tgz"
TAILSCALE_INSTALL_DIR="$BUILD_DIR/vendor/tailscale"

log_buildpack_progress <<INSTALLING_TAILSCALE
           \e[232m \e[0;90m ● ● ● \e[0m
Installing \e[232m \e[0;37m ● ● ● \e[0m Tailscale $TAILSCALE_VERSION ($TAILSCALE_BUILD_ARCH)
           \e[232m \e[0;90m ● \e[0;37m● \e[0;90m● \e[0m
INSTALLING_TAILSCALE
#log_buildpack_progress "Installing Tailscale $TAILSCALE_VERSION ($TAILSCALE_BUILD_ARCH)"

if [[ ! "$TAILSCALE_VERSION" = "$latest_tailscale_version" ]]; then
  log_buildpack_progress<<NEWER_TAILSCALE_VERSION_WARNING
\e[1;33mWARNING: You are installing an older version of Tailscale $TAILSCALE_VERSION ($TAILSCALE_BUILD_ARCH)\e[0m.

There is a more recent Tailscale version available for you to use.

It is recommend to use the latest version.
Please consider updating to the latest version: \e[1;32m$latest_tailscale_version ($TAILSCALE_BUILD_ARCH)\e[0m

NEWER_TAILSCALE_VERSION_WARNING
fi

install_successful=true

mkdir -p $TAILSCALE_INSTALL_DIR
mkdir -p "$TAILSCALE_INSTALL_DIR/bin/buildpack_helpers"

export PATH="$TAILSCALE_INSTALL_DIR:$PATH"
curl -sL $TAILSCALE_SOURCE_URL \
  | tar -zxf - -C "$TAILSCALE_INSTALL_DIR" --strip=1 tailscale_${TAILSCALE_VERSION}_${TAILSCALE_BUILD_ARCH}/tailscaled tailscale_${TAILSCALE_VERSION}_${TAILSCALE_BUILD_ARCH}/tailscale
chmod +x "$TAILSCALE_INSTALL_DIR/tailscale"
chmod +x "$TAILSCALE_INSTALL_DIR/tailscaled"

cp -r "$BUILDPACK_DIR/bin/buildpack_helpers" "$TAILSCALE_INSTALL_DIR/buildpack_helpers" || install_successful=false
cp "$BUILDPACK_DIR/bin/heroku-tailscale-start.sh" "$TAILSCALE_INSTALL_DIR/heroku-tailscale-start.sh" || install_successful=false
cp "$BUILDPACK_DIR/bin/heroku-tailscale-test.sh" "$TAILSCALE_INSTALL_DIR/heroku-tailscale-test.sh" || install_successful=false
chmod +x "$TAILSCALE_INSTALL_DIR/heroku-tailscale-start.sh"
chmod +x "$TAILSCALE_INSTALL_DIR/heroku-tailscale-test.sh"
mkdir -p "$BUILD_DIR/.profile.d"
echo 'export PATH="/app/vendor/tailscale:$PATH"' >> $BUILD_DIR/.profile.d/heroku-tailscale-buildpack.sh

if $install_successful; then
  if $START_TAILSCALE_ON_BOOT; then
    log_buildpack_progress "Configuring Tailscale to start when booting"
    # Add the line to start tailscale to the end of the file
    echo "/app/vendor/tailscale/heroku-tailscale-start.sh" >> $BUILD_DIR/.profile.d/heroku-tailscale-buildpack.sh
  else
    log_buildpack_progress "Tailscale will not automatically start when booting"
  fi

  log_buildpack_step "Tailscale $TAILSCALE_VERSION ($TAILSCALE_BUILD_ARCH) installed successfully!"
else
  log_buildpack_step "Failed to install Tailscale $TAILSCALE_VERSION ($TAILSCALE_BUILD_ARCH)"

  if $STOP_BUILD_ON_ERROR; then
    exit 1
  fi
fi
